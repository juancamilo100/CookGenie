{
  "_args": [
    [
      {
        "raw": "gea-adapter-usb@git+https://github.com/GEMakers/gea-adapter-usb.git",
        "scope": null,
        "escapedName": "gea-adapter-usb",
        "name": "gea-adapter-usb",
        "rawSpec": "git+https://github.com/GEMakers/gea-adapter-usb.git",
        "spec": "git+https://github.com/GEMakers/gea-adapter-usb.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:GEMakers/gea-adapter-usb.git",
          "sshUrl": "git+ssh://git@github.com/GEMakers/gea-adapter-usb.git",
          "httpsUrl": "git+https://github.com/GEMakers/gea-adapter-usb.git",
          "gitUrl": "git://github.com/GEMakers/gea-adapter-usb.git",
          "shortcut": "github:GEMakers/gea-adapter-usb",
          "directUrl": "https://raw.githubusercontent.com/GEMakers/gea-adapter-usb/master/package.json"
        }
      },
      "/Users/lauraartunduaga/Documents/CodeLouisville/Hackathon/CookGEnie/node_modules/green-bean"
    ]
  ],
  "_from": "git+https://github.com/GEMakers/gea-adapter-usb.git",
  "_id": "gea-adapter-usb@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/gea-adapter-usb",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gea-adapter-usb@git+https://github.com/GEMakers/gea-adapter-usb.git",
    "scope": null,
    "escapedName": "gea-adapter-usb",
    "name": "gea-adapter-usb",
    "rawSpec": "git+https://github.com/GEMakers/gea-adapter-usb.git",
    "spec": "git+https://github.com/GEMakers/gea-adapter-usb.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:GEMakers/gea-adapter-usb.git",
      "sshUrl": "git+ssh://git@github.com/GEMakers/gea-adapter-usb.git",
      "httpsUrl": "git+https://github.com/GEMakers/gea-adapter-usb.git",
      "gitUrl": "git://github.com/GEMakers/gea-adapter-usb.git",
      "shortcut": "github:GEMakers/gea-adapter-usb",
      "directUrl": "https://raw.githubusercontent.com/GEMakers/gea-adapter-usb/master/package.json"
    }
  },
  "_requiredBy": [
    "/green-bean"
  ],
  "_resolved": "git+https://github.com/GEMakers/gea-adapter-usb.git#3d99ffdcaec32125a3a287413237e8a636efdd08",
  "_shasum": "b72e4c147c3d4ca4a9d659b10d925874ddc92b53",
  "_shrinkwrap": null,
  "_spec": "gea-adapter-usb@git+https://github.com/GEMakers/gea-adapter-usb.git",
  "_where": "/Users/lauraartunduaga/Documents/CodeLouisville/Hackathon/CookGEnie/node_modules/green-bean",
  "author": {
    "name": "Christopher Baker",
    "email": "christopher.baker2@ge.com"
  },
  "bugs": {
    "url": "https://github.com/GEMakers/gea-adapter-usb/issues"
  },
  "dependencies": {
    "binary-stream": "git+https://github.com/GEMakers/binary-stream.git",
    "node-hid": ">0.2.2"
  },
  "description": "General Electric Appliance adapter for USB communication",
  "devDependencies": {},
  "gitHead": "3d99ffdcaec32125a3a287413237e8a636efdd08",
  "homepage": "http://www.ge.com/",
  "keywords": [
    "GE",
    "GEA",
    "General Electric",
    "appliance",
    "USB",
    "adapter"
  ],
  "name": "gea-adapter-usb",
  "optionalDependencies": {},
  "readme": "# USB adapter for the GEA SDK\n\nThis node.js package provides a USB adapter for the [GEA SDK](https://github.com/GEMakers/gea-sdk).\nAdapters provide the physical transport mechanism for GEA messages.\n\n## UDEV Rules\n\nIn order to use the GreenBean Adapter without 'sudo', you must copy the Udev rules to /etc/udev/rules.d/\n\n```\nsudo cp ge-greenbean.rules /etc/udev/rules.d/\n```\n\n## Adapter interface\n\nEach adapter must implement a common interface in order to be used with the GEA SDK.\n\n``` javascript\nvar configuration = {\n    address: 0x00 // the unique device address to bind to\n};\n\n// the bind function will attempt to acquire a device instance\n// the address specified in the configuration is used to uniquely identify the device\nadapter.bind(configuration, function (device) {\n  // the callback will be called once the bind completes\n  // the device is an object that implements the device interface\n});\n\n```\n  \n## Device interface\n\nWhen binding was successful a device object is supplied to the bind callback.\nEach device object must implement a common interface in order to be used with the GEA SDK.\n\n``` javascript\ndevice.on(\"message\", function (message) {\n    // this event is triggered whenever a message has been received\n    // each message is an object that implements the message interface\n});\n\n\n// the send function will send a message via the device\n// this message must implement the message interface\ndevice.send(message);\n```\n  \n## Message interface\n\nWhen two endpoints wish to communicate over an adapter, they do so by sending and receiving messages.\nEach message must implement a common interface in order to be understood by the endpoint.\n\n``` javascript\nmessage: {\n  source: 0x00,        // the address of the sender\n  destination: 0x00,   // the address of the recipient\n  command: 0x00,       // the command identifier\n  data: [ 0x00, 0x00 ] // the message data\n}\n```\n\n## USB interface\n\nWhen the bind function is called for this adapter, it will search for all available USB adapters that have a vendor id of 1240 and a product id of 64752.\nThese identifiers match the GE issued NEWFI USB to RJ45 adapter.\nIt will then open the USB device and send the address list command (0x01) to it.\nThis will alert the microcontroller to handle message acknowledgements for the address specified in the configuration.\nOnce this message has been sent, the USB device will now receive HID messages.\nWhen the HID message is received, it is converted to the message interface.\nLikewise, a transformation occurs when sending a message before it goes over the USB device.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GEMakers/gea-adapter-usb.git"
  },
  "version": "0.1.0"
}
